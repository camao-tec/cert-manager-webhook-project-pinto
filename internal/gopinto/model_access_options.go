/*
 * Fava - OpenApi Gateway - DNS
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gopinto

import (
	"encoding/json"
)

// AccessOptions struct for AccessOptions
type AccessOptions struct {
	Provider      *string `json:"provider,omitempty"`
	Environment   *string `json:"environment,omitempty"`
	CredentialsId *string `json:"credentials_id,omitempty"`
}

// NewAccessOptions instantiates a new AccessOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessOptions() *AccessOptions {
	this := AccessOptions{}
	return &this
}

// NewAccessOptionsWithDefaults instantiates a new AccessOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessOptionsWithDefaults() *AccessOptions {
	this := AccessOptions{}
	return &this
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *AccessOptions) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessOptions) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *AccessOptions) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *AccessOptions) SetProvider(v string) {
	o.Provider = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AccessOptions) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessOptions) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *AccessOptions) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *AccessOptions) SetEnvironment(v string) {
	o.Environment = &v
}

// GetCredentialsId returns the CredentialsId field value if set, zero value otherwise.
func (o *AccessOptions) GetCredentialsId() string {
	if o == nil || o.CredentialsId == nil {
		var ret string
		return ret
	}
	return *o.CredentialsId
}

// GetCredentialsIdOk returns a tuple with the CredentialsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessOptions) GetCredentialsIdOk() (*string, bool) {
	if o == nil || o.CredentialsId == nil {
		return nil, false
	}
	return o.CredentialsId, true
}

// HasCredentialsId returns a boolean if a field has been set.
func (o *AccessOptions) HasCredentialsId() bool {
	if o != nil && o.CredentialsId != nil {
		return true
	}

	return false
}

// SetCredentialsId gets a reference to the given string and assigns it to the CredentialsId field.
func (o *AccessOptions) SetCredentialsId(v string) {
	o.CredentialsId = &v
}

func (o AccessOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.CredentialsId != nil {
		toSerialize["credentials_id"] = o.CredentialsId
	}
	return json.Marshal(toSerialize)
}

type NullableAccessOptions struct {
	value *AccessOptions
	isSet bool
}

func (v NullableAccessOptions) Get() *AccessOptions {
	return v.value
}

func (v *NullableAccessOptions) Set(val *AccessOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessOptions(val *AccessOptions) *NullableAccessOptions {
	return &NullableAccessOptions{value: val, isSet: true}
}

func (v NullableAccessOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
